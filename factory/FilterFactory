/* -*-c++-*- 
 *
 *    file: FilterFactory
 *  author: ShpakovDmitry
 *    date: 2023-6-17
 * licence: CC0
 * summary: Factory to create instances of various filters.
 *
 */

#ifndef _FILTER_FACTORY_
#define _FILTER_FACTORY_

#include "../interface/Filter"
#include "../FIRFilter/FIRFilter"
#include "../IIRFilter/IIRFilter"
#include <memory>

namespace Filters {

    class FilterFactory {
        public:
            //FIR filters
            static std::unique_ptr<Filter> createFIRFilter(const std::vector<float> &coefficients);
            static std::unique_ptr<Filter> createSimpleMovingAverageFilter(unsigned numSamples);

            //IIR filters
            static std::unique_ptr<Filter> createIIRFilter(const std::vector<float> &feedfrontCoefficients,
                                                           const std::vector<float> &feedbackCoefficients);
            static std::unique_ptr<Filter> createEMAFilter(float alpha);
        private:
    
    };

} // namespace Filters

#endif//_FILTER_FACTORY_

